#! /usr/bin/env python
import pynitf
import subprocess
import os
import sys

version="June 6, 2019"
usage="""Usage: 
  nitfinfofull [options] <input_file>
  nitfinfofull -h | --help
  nitfinfofull -v | --version

Print out full information about a NITF file.

This program is equivalent to running nitfinfo --full in geocal

Options:
  -h --help         
       Print this message

  --debug
       Turn on debugging statements in pynitf

  --report-raw
       Some plugins might turn more complicated structures into more
       complicated objects and report them, e.g., geocal with RSM. In
       many cases you want that, but in some cases you might want to view
       the raw field data without having in interpreted. Use this option
       to report the raw fields instead.

  -v --version      
       Print program version

"""
args = pynitf.docopt_simple.docopt_simple(usage, version=version)

# Load plugins for nitf
if "NITF_PLUGIN" in os.environ:
    for m in os.environ["NITF_PLUGIN"].split(":"):
        exec("import %s" % m)
        
if(args.debug):
    pynitf.nitf_field.DEBUG = True
    pynitf.nitf_des.DEBUG = True
f = pynitf.NitfFile(args.input_file)
f.report_raw = args.report_raw
print(f)
