#! /usr/bin/env python
#
# This map projects a ImageGroundConnection to the surface, generating
# a map projected image.

from afids import *

version = "February 6, 2013"
usage='''Usage: 
  igc_project [options] <igc_collection> <image_index> <output>
  igc_project -h | --help
  igc_project -v | --version

This map projects a ImageGroundConnection to the surface, generating
a map projected image. The igc_collection should be in the normal
"file:key" format. The index number for which image to use is supplied,
this is -0-based. The output is a VICAR file.

Options:
  -h --help         
       Print this message

  --dem=shelve
       DEM to use, specified as file:key. If not specified, we use the 
       DEM from the IGC.

  --grid-spacing=g
       Grid spacing to exactly calculate the image ground connection
       for, doing a linear interpolation in between. This can greatly
       affect how long the processing takes. If the grid spacing is
       something like the DEM resolution, usually you get almost as
       good output but much faster. [default: 1]

  --number-process=n 
       Number of processors to use. [default: 1]

  --resolution=r
       Resolution in meters of output. [default: 1.0]

  -v --version      
       Print program version
'''

args = docopt_simple(usage, version=version)

igc_col = read_shelve(args.igc_collection)
igc = igc_col.image_ground_connection(args.image_index)
if(args.dem):
    igc.dem = read_shelve(args.dem)

# Create the map projection object

mibase = cib01_mapinfo()
resbase = mibase.resolution_meter
miscale = mibase.scale(args.resolution / resbase, args.resolution / resbase)
mi = igc.cover(miscale)
mp = IgcMapProjected(mi, igc)
out = VicarRasterImage(args.output, mp.map_info, "HALF")
mp.write_image(out, args.grid_spacing)




