geocalpkgpython_PYTHON = @srcpython@/init/__init__.py
# Backdoor rule to do a quick install when we are just varying python
install-python-geocal: install-geocalpkgpythonPYTHON install-dist_geocalpkgpythonDATA install-dist_binSCRIPTS install-pynitf

if INSTALL_PYNITF
# Note the --single-version-externally-managed is because we don't yet have
# the PYTHONPATH set, and an install complains. This is actually ok, because
# we really do just have a single version externally managed here.
# Chmod is needed to reinstall after doing an uninstall
# 
# Note that to install pynitf with changes, you usually need to
# uninstall-pynitf first
install-pynitf:
	-chmod +w -R @geocalpkgpythondir@/../pynitf*
	cd $(srcdir)/@srcpython@/pynitf && \
        export LD_LIBRARY_PATH="$(PYTHON_LDPATH)$(LD_LIBRARY_PATH)" && \
        $(PYTHON) setup.py build --build-base=@abs_builddir@/pynitf/build egg_info --egg-base=@abs_builddir@/pynitf install --prefix=$(DESTDIR)$(prefix) --single-version-externally-managed --record @abs_builddir@/pynitf/files.txt

EXTRA_PYTHON_TEST=$(srcdir)/@srcpython@/pynitf
INSTALL_DATA_HOOK += install-pynitf

uninstall-pynitf:
	-rm -rf `cat pynitf/files.txt`

UNINSTALL_HOOK+= uninstall-pynitf

clean-pynitf:
	-rm -r pynitf

CLEAN_HOOK += clean-pynitf
else
EXTRA_PYTHON_TEST=
endif

EXTRA_DIST+=@srcpython@/pynitf
EXTRA_DIST+=@srcpython@/pytest.ini
EXTRA_DIST+=@srcpython@/setup.cfg
EXTRA_DIST+=@srcpython@/conftest.py
EXTRA_DIST+=@srcpython@/README_test

# Make sure we don't have any pyc or pycache files floating around
DIST_HOOK += dist-clean-up-python

dist-clean-up-python:
	rm -rf `find $(distdir) -name '__pycache__'`
	rm -f `find $(distdir) -name '*.pyc'`

# We need to override the default py_compile to make sure the LD_LIBRARY_PATH
# is set if needed

am__py_compile = LD_LIBRARY_PATH=$(PYTHON_LDPATH)$(LD_LIBRARY_PATH) PYTHON=$(PYTHON) $(SHELL) $(py_compile)

if HAVE_AFIDS
PYTHON_CHECK_PATH=$(afidspythonvdevdir):$(AFIDS_PREFIX)/bin:${PATH}:${GDAL_PREFIX}/bin
else
PYTHON_CHECK_PATH=$(afidspythonvdevdir):${PATH}:${GDAL_PREFIX}/bin
endif

if HAVE_AFIDS_DATA
setup_afids_data = source $(AFIDS_DATA)/setup_afids_data.sh
else
setup_afids_data = :
endif
if HAVE_SPICE
setup_spice = export SPICEDATA="$(abs_top_srcdir)/@geocalunittestdata@/spice" && export MARS_KERNEL="$(abs_top_srcdir)/@geocalunittestdata@/mars_kernel"
else
setup_spice = :
endif
if BUILD_AFIDS
setup_geocal = source $(DESTDIR)$(prefix)/setup_afids_env.sh
else
setup_geocal = $(setup_afids_data) && $(setup_spice) && source $(DESTDIR)$(prefix)/setup_geocal.sh
endif
# Number of jobs to run at once. Default is to automatically determine this,
# but you can specify a different number.
PYTEST_NJOB=10

# Note useful flags to use here might be PYTEST_EXTRAFLAGS="--instafail" or
# PYTEST_EXTRAFLAGS="--timeout=20"
PYTEST_EXTRAFLAGS=
PYTEST_FLAGS= -q -n $(PYTEST_NJOB)
if CODE_COVERAGE_ENABLED
PYTEST_FLAGS+= --cov-report term
PYTEST_FLAGS+= --cov-report html:$(PACKAGE)-coverage-python
PYTEST_FLAGS+= --cov=geocal
endif

# We use to have this called python_check, which is inconsistent with
# the "normal" automake convention of names with a "-" instead of "_".
# So we've changed this. But I'm not sure that there isn't old scripts out
# there depending on the old name, so at least for a while accept both
# names
python_check: python-check

python-check:
	export PATH="$(PYTHON_CHECK_PATH)" && \
        export PYTHONPATH="$(abs_srcdir)/$(srcpython):${PYTHONPATH}" && \
        $(setup_geocal) && \
        $(PYTEST) $(PYTEST_FLAGS) $(PYTEST_EXTRAFLAGS) $(srcdir)/@srcpython@/bin/ $(srcdir)/@srcpython@/lib/ $(srcdir)/@srcgeocalbin@ $(EXTRA_PYTHON_TEST)

INSTALLCHECK_HOOK+= python_check

# We don't actually replace the shebang, this was done for a short time
# when we were porting to python 3. But go ahead and leave this in commented
# out in case doing something like this would be useful in the future
# replace_python_shebang: install-dist_binSCRIPTS
# 	flist=`grep --binary-files=without-match '#!' -R $(bindir) | grep python | sed s/:.*//g` ; \
#         for i in $$flist; do \
#           mv -f $$i $$i.old; \
#           echo "#!$(PYTHON)" > $$i; \
#           chmod --reference=$$i.old $$i; \
#           tail -n +2 $$i.old >> $$i ; \
#           rm -f $$i.old ; \
#         done

# replace_python_shebang2: install-dist_afidspythonvdevSCRIPTS
# 	flist=`grep --binary-files=without-match '#!' -R $(afidspythonvdevdir) | grep python | sed s/:.*//g` ; \
#         for i in $$flist; do \
#           mv -f $$i $$i.old; \
#           echo "#!$(PYTHON)" > $$i; \
#           chmod --reference=$$i.old $$i; \
#           tail -n +2 $$i.old >> $$i ; \
#           rm -f $$i.old ; \
#         done

