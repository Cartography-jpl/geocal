#! /usr/bin/env python
#
# This converts a GDAL file to ERDAS, including calculating statistics and
# an image pyramid.

from afids import *
from optparse import OptionParser
import subprocess

parser = OptionParser(version="%prog September 6, 2012",
usage="""usage: %prog [options] <input gdal file> <output erdas>
This converts a GDAL file to ERDAS, including calculating statistics and
an image pyramid.
""")

(options, args) = parser.parse_args()
if(len(args) != 2):
    parser.error("Need to specify all the arguments")
infname, outfname = args

infile = GdalRasterImage(infname)
subprocess.check_call(["gdal_translate", 
                       "-of", "hfa",
                       "-co", "STATISTICS=YES",
                       "-co", "COMPRESSED=YES",
                       infname, outfname])
# The default blocksize of ERDAS is 64x64. Since we just created the file,
# we know this is the blocksize. 
blocksize = 64
cmd = ["gdaladdo", outfname, "2"]
i = 2
# We want to make image pyramids down to a single block
while(infile.number_line / i > blocksize and
      infile.number_sample / i > blocksize):
    i *= 2
    cmd.append(str(i))
subprocess.check_call(cmd)

