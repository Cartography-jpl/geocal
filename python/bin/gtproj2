#! /usr/bin/env python
#
# This implements the gtproj2 routine. This is a replacement for gtproj
# which adds support for more map projections.

from geocal import *
import sys

t = VicarArgument(sys.argv)

ibfname,labfname1,labfname2 = t["inp"]

f = IbisFile(ibfname, IbisFile.UPDATE)
imgin = VicarLiteRasterImage(labfname1)
imgout = VicarLiteRasterImage(labfname2)
cin = imgin.map_info.coordinate_converter
cout = imgout.map_info.coordinate_converter

# Get input and output columns. The z column might be given, or might not.
# If missing, then we always have a height of 0.
if(len(t["incol"]) == 2):
    ix,iy = t["incol"]
    ix -= 1
    iy -= 1
    iz = None
else:
    ix,iy,iz = t["incol"]
    ix -= 1
    iy -= 1
    iz -= 1
if(len(t["outcol"]) == 2):
    ox,oy = t["outcol"]
    ox -= 1
    oy -= 1
    oz = None
else:
    ox,oy,oz = t["outcol"]
    ox -= 1
    oy -= 1
    oz -= 1

for r in range(f.number_row):
    if(iz):
        x,y,z = f[r,ix],f[r,iy],f[r,iz]
    else:
        x,y,z = f[r,ix],f[r,iy],0.0
    if(t["coordtype"] == "MAP"):
        f[r,ox],f[r,oy],zmaybe = cout.convert_to_coordinate(cin.convert_from_coordinate(x,y,z))
    elif(t["coordtype"] == "IMAGE"):
        ic = ImageCoordinate(VicarImageCoordinate(x, y))
        gc = imgin.ground_coordinate(ic, SimpleDem(z))
        if(oz):
            zmaybe = cout.convert_to_coordinate(gc)[2]
        ic = VicarImageCoordinate(imgout.coordinate(gc))
        f[r,ox] = ic.line
        f[r,oy] = ic.sample
    else:
        raise RuntimeError("This shouldn't be able to happen")
    if(oz):
        f[r,oz] = zmaybe
