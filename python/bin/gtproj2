#! /usr/bin/env python
#
# This implements the gtproj2 routine. This is a replacement for gtproj
# which adds support for more map projections.

import geocal
import sys

t = geocal.VicarArgument(sys.argv)

ibfname,labfname1,labfname2 = t["inp"]

if(t["coordtype"] == "MAP"):
    do_map = True
elif(t["coordtype"] == "IMAGE"):
    do_map = False
else:
    raise RuntimeError("This shouldn't be able to happen")

f = geocal.IbisFile(ibfname, geocal.IbisFile.UPDATE)
imgin = geocal.VicarLiteRasterImage(labfname1)
imgout = geocal.VicarLiteRasterImage(labfname2)
cin = imgin.map_info.coordinate_converter
cout = imgout.map_info.coordinate_converter

# Get input and output columns. The z column might be given, or might not.
# If missing, then we always have a height of 0.
if(len(t["incol"]) == 2):
    ix,iy = t["incol"]
    ix -= 1
    iy -= 1
    iz = None
else:
    ix,iy,iz = t["incol"]
    ix -= 1
    iy -= 1
    iz -= 1
if(len(t["outcol"]) == 2):
    ox,oy = t["outcol"]
    ox -= 1
    oy -= 1
    oz = None
else:
    ox,oy,oz = t["outcol"]
    ox -= 1
    oy -= 1
    oz -= 1

# We sometimes call this will lots of points (e.g., 1 million). For speed,
# we directly work with the ibis data. This is a little more obscure than
# just saying f[r, ix], but it is faster.
fix = f.column(ix).data
fiy = f.column(iy).data
if(iz):
    fiz = f.column(iz).data
fox = f.column(ox).data
f.column(ox).update = True
foy = f.column(oy).data
f.column(oy).update = True
if(oz):
    foz = f.column(oz).data
    f.column(oz).update = True

for r in range(f.number_row):
    if(iz):
        x,y,z = fix[r],fiy[r],fiz[r]
    else:
        x,y,z = fix[r],fiy[r],0.0
    if(do_map):
        fox[r],foy[r],zmaybe = cout.convert_to_coordinate(cin.convert_from_coordinate(x,y,z))
        if(oz):
            foz[r] = zmaybe
    else:
        if(oz):
            gc = imgin.ground_coordinate(x - 1, y - 1, geocal.SimpleDem(z))
            foz[r] = cout.convert_to_coordinate(gc)[2]
        else:
            gc = imgin.ground_coordinate(x - 1, y - 1)
        ic = imgout.coordinate(gc)
        fox[r] = ic.line + 1
        foy[r] = ic.sample + 1
