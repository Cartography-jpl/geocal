PROCESS       HELP=*
parm refimg type=(string,99) count=1
parm refbase type=(string,99) count=1
parm refresname type=(string,99) count=1
parm img type=(string,99) count=1
parm imgbase type=(string,99) count=1
parm imgresname type=(string,99) count=1
parm autofit type=int default=14 valid=(0:500)
parm bandref type=int count=1 default=1
parm bandimg type=int count=1 default=1
parm fftsize type=int count=1 default=256 valid=32:1024
parm fftgrid type=int count=2 default=(42,42) valid=2:64
parm hirisecorr type=(string,4) count=(0:1) valid=(n,y) default=n
parm magnify type=real count=1 default=4.0 valid=(0.0:5000.0)
parm magmin type=real count=1 default=2.0 valid=(0.0:5000.0)
parm nah type=int count=1 default=1000
parm nav type=int count=1 default=1000
parm polyfit type=string count=(0:1) default="" +
   VALID=("","LINEAR","KEYSTONE","QUAD","CUBIC")
parm redo type=int default=36 valid=(0:999)
parm seed type=int default=562
parm thr_res type=real count=1 default=10.0
parm toler type=real count=1 default=1.5 valid=(0.0:20.0)
parm useproj type=string count=1 default="" 
parm userefproj type=(string,4) count=(0:1) valid=(n,y) default=n
END-PROC
.TITLE
Mars correct image
.HELP
This imports the 2 images into VICAR, resamples the reference image to
the same projection as the second image, and then uses the reference
image to correct the second image. The images are resampled both to the
resolution of the original image as well as the reference image. Names
for the resolution can be anything you like, e.g., "5m", "res1". It is
used for form the output name.

We name the images by the base names. So for example:

  mars_correct_image P14_006644_1747_XI_05S222W_8bit.tif ctx 5m \
      ESP_025012_1745_RED_8bitrender.tif hirise 0.25m

Would result in ctx_5m.img ctx_0.25m.img hirise_corr_5m.img and 
hirise_corr_0.25m.img.
.LEVEL1
.VARIABLE autofit
Set the FITMIN threshold automatically using the first n correlations.
.variable bandref
The band number to use for the image we are correcting (if multiple 
bands present)
.variable fftsize
FFT window size. Default should generally work, but sometimes you
have a narrow overlap and need to settle for a smaller window so 
you have enough imagery to match (e.g., very different matching size
such as viking 232 meter data to 50 meter HRSC data).
.variable fftgrid
How many FFT points to match, in line x sample order. Note that to
pass this you need to use quotes, e.g., fftgrid="(42,42)".
.variable  hirisecorr
Hirise imagery in equirectangular appears to have the 
latitude_of_origin and standard_parallel_1 swapped, at least for
some data. Not sure how to recognize this, and not sure if this
always occurs. So this option turns on some heuristics to try to
identify and correct this. If this is left off, we don't do this
correction.
.variable magnify
We initially magnify the area we try matching on, so we search in
a larger area to get the initial match points. This gives that
factor.
.variable magmin
Once we have a few points matched, we shrink the magnification factor
we use on the window size to this value.
.variable nah
Number of grid cells in the sample direction to use warping final image.
.variable nav
Number of grid cells in the line direction to use warping final image.
.variable polyfit
When warping the image to the reference image to correct it, we 
can either use triangulation on each matched points, or we can
constrain the mapping to a LINEAR, KEYSTONE, QUAD, or CUBIC 
polynomial fit. See the VICAR Proc "tieconv" for more details on
this.
.variable redo
At the end of processing, this number of points will be redone.
.variable seed
Seed number to use when selecting points to match. Normally you don't
need to modify this, but if you get bad accuracy results when doing
a correction you can try selecting a different seed to a different
set of match points are selected.
.variable thr_res
Prevent offset correlations further than this value from the 
predicted location from entering into the model fit of the 
reference to image we are correcting. This is to prevent gross 
blunders. Note that this is in the resolution of the reference 
image (which is typically coarser).
.variable toler
Tolerance we use when rejected matched points as blunders. 
.variable useproj
The default is to leave the image in its original projection, so
we try to minimize what we do with the image. However it can be
useful to bring everything to a common projection. This option says
to use the projection found in this file.
.variable userefproj
The default is to leave the image in its original projection, so
we try to minimize what we do with the image. However it can be
useful to bring everything to a common projection. This option says
to use the reference image projection rather than image projection.
.END
