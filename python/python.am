geocalpkgpython_PYTHON = @srcpython@/init/__init__.py

# Backdoor rule to do a quick install when we are just varying python
install-python-geocal: install-geocalpkgpythonPYTHON install-dist_geocalpkgpythonDATA install-dist_binSCRIPTS

if HAVE_AFIDS
PYTHON_CHECK_PATH=$(bindir):$(afidspythonvdevdir):$(AFIDS_PREFIX)/bin:${PATH}:${GDAL_PREFIX}/bin
else
PYTHON_CHECK_PATH=$(bindir):$(afidspythonvdevdir):${PATH}:${GDAL_PREFIX}/bin
endif

if HAVE_AFIDS_DATA
setup_afids_data = source $(AFIDS_DATA)/setup_afids_data.sh
else
setup_afids_data = :
endif
if HAVE_SPICE
setup_spice = export SPICEDATA=$(abs_top_srcdir)/@geocalunittestdata@/spice
else
setup_spice = :
endif
# Number of jobs to run at once. Default is to automatically determine this,
# but you can specify a different number.
PYTEST_NJOB=auto

PYTEST_EXTRAFLAGS=
PYTEST_FLAGS= -q -n $(PYTEST_NJOB)

python_check:
	export PYTHONPATH=$(prefix)/$(platpythondir):$(prefix)/$(pythondir):${PYTHONPATH} && \
        export LD_LIBRARY_PATH="$(DESTDIR)$(libdir):${LD_LIBRARY_PATH}" && \
        $(setup_afids_data) && \
        $(setup_spice) && \
        export PATH=$(PYTHON_CHECK_PATH) && \
        $(PYTEST) $(PYTEST_FLAGS) $(PYTEST_EXTRAFLAGS) $(srcdir)/@srcpython@/bin/ $(srcdir)/@srcpython@/lib/ $(srcdir)/@srcgeocalbin@

INSTALLCHECK_HOOK+= python_check

# We don't actually replace the shebang, this was done for a short time
# when we were porting to python 3. But go ahead and leave this in commented
# out in case doing something like this would be useful in the future
# replace_python_shebang: install-dist_binSCRIPTS
# 	flist=`grep --binary-files=without-match '#!' -R $(bindir) | grep python | sed s/:.*//g` ; \
#         for i in $$flist; do \
#           mv -f $$i $$i.old; \
#           echo "#!$(PYTHON)" > $$i; \
#           chmod --reference=$$i.old $$i; \
#           tail -n +2 $$i.old >> $$i ; \
#           rm -f $$i.old ; \
#         done

# replace_python_shebang2: install-dist_afidspythonvdevSCRIPTS
# 	flist=`grep --binary-files=without-match '#!' -R $(afidspythonvdevdir) | grep python | sed s/:.*//g` ; \
#         for i in $$flist; do \
#           mv -f $$i $$i.old; \
#           echo "#!$(PYTHON)" > $$i; \
#           chmod --reference=$$i.old $$i; \
#           tail -n +2 $$i.old >> $$i ; \
#           rm -f $$i.old ; \
#         done

